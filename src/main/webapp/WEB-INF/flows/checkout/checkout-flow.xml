<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
	http://www.springframework.org/schema/webflow/spring-webflow.xsd">
	<var name="order" class="com.packt.webstore.domain.Order" />
	<action-state id="addCartToOrder">
		<evaluate
			expression="cartServiceImpl.validate(requestParameters.cartId)"
			result="order.cart" />
		<transition to="invalidCartWarning"
			on-exception="com.packt.webstore.exception.InvalidCartException" />
		<transition to="returningCustomerId" />
	</action-state>
	
	<view-state id="returningCustomerId" model="order">
		<transition on="checkCustomerIdExists"
			to="checkCustomerExist" />
	</view-state>
	
	<decision-state id="checkCustomerExist">
		<if test="customerServiceImpl.isCustomerExist(order.customer.customerId)"
		then="updateThisCustomer"
		else="collectCustomerInfo"/>
	</decision-state>
	
	<action-state id="updateThisCustomer">
		<evaluate expression="customerServiceImpl.getCustomer(order.customer.customerId)"
			result="order.customer" />
		<transition to="collectShippingDetail" />
	</action-state>
	
	<view-state id="collectCustomerInfo" model="order"><!-- That Model object gets bound to the View via the modelAttribute attribute of the <form:form> tag in collectCustomerInfo.jsp -->
		<transition on="customerInfoCollected"
			to="storeCustomer" />
	</view-state>
	
	<action-state id="storeCustomer">
		<evaluate expression="customerServiceImpl.saveCustomer(order.customer)"
			result="order.customer.customerId" />
		<transition to="collectShippingDetail" />
	</action-state>
	
	<view-state id="collectShippingDetail" model="order">
		<transition on="shippingDetailCollected"
			to="orderConfirmation" />
		<transition on="backToCollectCustomerInfo"
			to="collectCustomerInfo" />
	</view-state>
	
	<view-state id="orderConfirmation">
		<transition on="orderConfirmed" to="processOrder" />
		<transition on="backToCollectShippingDetail"
			to="collectShippingDetail" />
	</view-state>
	<action-state id="processOrder">
		<evaluate expression="orderServiceImpl.saveOrder(order)"
			result="order.orderId" />
		<transition to="thankCustomer" />
	</action-state>
	<view-state id="invalidCartWarning">
		<transition to="endState" />
	</view-state>
	<view-state id="thankCustomer" model="order">
		<transition to="endState" />
	</view-state>
	<end-state id="endState" />
	<end-state id="cancelCheckout" view="checkOutCancelled" />
	<global-transitions>
		<transition on="cancel" to="cancelCheckout" />
	</global-transitions>
</flow>