DROP TABLE ORDERS IF EXISTS;
DROP TABLE CART_ITEM IF EXISTS;
DROP TABLE CART IF EXISTS;
DROP TABLE CUSTOMER IF EXISTS;
DROP TABLE SHIPPING_DETAIL IF EXISTS;
DROP TABLE ADDRESS IF EXISTS;
DROP TABLE PRODUCTS IF EXISTS;

CREATE TABLE PRODUCTS (
ID VARCHAR(250) PRIMARY KEY,
NAME VARCHAR(250),
DESCRIPTION VARCHAR(250),
UNIT_PRICE DECIMAL,
MANUFACTURER VARCHAR(250),
CATEGORY VARCHAR(250),
CONDITION VARCHAR(250),
UNITS_IN_STOCK BIGINT,
UNITS_IN_ORDER BIGINT,
DISCONTINUED BOOLEAN
);

CREATE TABLE CART (
ID VARCHAR(250) PRIMARY KEY
);

CREATE TABLE CART_ITEM (
ID VARCHAR(250),
PRODUCT_ID VARCHAR(250) FOREIGN KEY REFERENCES PRODUCTS(ID),
CART_ID varchar(250) FOREIGN KEY REFERENCES CART(ID),
QUANTITY BIGINT,
CONSTRAINT CART_ITEM_PK PRIMARY KEY (ID,CART_ID)
);

CREATE TABLE ADDRESS (
ID INTEGER IDENTITY PRIMARY KEY,
DOOR_NO VARCHAR(250),
STREET_NAME VARCHAR(250),
AREA_NAME VARCHAR(250),
STATE VARCHAR(250),
COUNTRY VARCHAR(250),
ZIP VARCHAR(250),
);

CREATE TABLE CUSTOMER (
ID INTEGER IDENTITY PRIMARY KEY,
NAME VARCHAR(250),
PHONE_NUMBER VARCHAR(250),
BILLING_ADDRESS_ID INTEGER FOREIGN KEY REFERENCES ADDRESS(ID),
);

CREATE TABLE SHIPPING_DETAIL (
ID INTEGER IDENTITY PRIMARY KEY,
NAME VARCHAR(250),
SHIPPING_DATE VARCHAR(250),
SHIPPING_ADDRESS_ID INTEGER FOREIGN KEY REFERENCES ADDRESS(ID),
);

CREATE TABLE ORDERS (
ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1000, INCREMENT BY 1) PRIMARY KEY, 
CART_ID VARCHAR(250) FOREIGN KEY REFERENCES CART(ID),
CUSTOMER_ID INTEGER FOREIGN KEY REFERENCES CUSTOMER(ID),
SHIPPING_DETAIL_ID INTEGER FOREIGN KEY REFERENCES SHIPPING_DETAIL(ID),
);